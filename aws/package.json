{
  "name": "universal-auth-a2a-mcp-aws",
  "version": "1.0.0",
  "description": "Universal auth A2A and MCP for AWS",
  "scripts": {
    "foundation:up":      "aws cloudformation deploy --template-file agentic-foundation.yaml --stack-name agentic-foundation-staging --parameter-overrides Environment=staging --capabilities CAPABILITY_IAM",
    "foundation:up:prod": "aws cloudformation deploy --template-file agentic-foundation.yaml --stack-name agentic-foundation-prod --parameter-overrides Environment=prod --capabilities CAPABILITY_IAM",
    "foundation:down":      "aws cloudformation delete-stack --stack-name agentic-foundation-staging",
    "foundation:down:prod": "aws cloudformation delete-stack --stack-name agentic-foundation-prod",
    
    "foundation:status":      "aws cloudformation describe-stacks --stack-name agentic-foundation-staging --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo 'STACK_DELETED'",
    "foundation:status:prod": "aws cloudformation describe-stacks --stack-name agentic-foundation-prod --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo 'STACK_DELETED'",
    "foundation:events":      "aws cloudformation describe-stack-events --stack-name agentic-foundation-staging --query 'StackEvents[0:5]' --output table",
    "foundation:events:prod": "aws cloudformation describe-stack-events --stack-name agentic-foundation-prod --query 'StackEvents[0:5]' --output table",

    "service:build": "cd ../service && npm run build",
    "service:package": "npm run service:build && rm -f function.zip && cd ../service && zip -r ../aws/function.zip dist www node_modules package.json",
    
    "service:deploy": "./deploy-service.sh staging demo",
    "service:status": "aws cloudformation describe-stacks --stack-name agentic-service-a2a-mcp-demo-staging --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo 'STACK_DELETED'",
    "service:undeploy": "aws cloudformation delete-stack --stack-name agentic-service-a2a-mcp-demo-staging",

    "service:deploy:prod": "./deploy-service.sh prod demo",
    "service:status:prod": "aws cloudformation describe-stacks --stack-name agentic-service-a2a-mcp-demo-prod --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo 'STACK_DELETED'",
    "service:undeploy:prod": "aws cloudformation delete-stack --stack-name agentic-service-a2a-mcp-demo-prod",

    "service:deploy:venture": "./deploy-service.sh staging venture",
    "service:deploy:venture:prod": "./deploy-service.sh prod venture",
    "service:deploy:volunteer": "./deploy-service.sh staging volunteer",
    "service:deploy:volunteer:prod": "./deploy-service.sh prod volunteer",

    "website:build": "cd ../website && npm run build",

    "website:deploy": "./deploy-website.sh staging demo",
    "website:deploy:prod": "./deploy-website.sh prod demo",

    "website:status": "aws cloudformation describe-stacks --stack-name agentic-website-demo-staging --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo 'STACK_DELETED'",
    "website:status:prod": "aws cloudformation describe-stacks --stack-name agentic-website-demo-prod --query 'Stacks[0].StackStatus' --output text 2>/dev/null || echo 'STACK_DELETED'",

    "website:undeploy": "aws cloudformation delete-stack --stack-name agentic-website-demo-staging",
    "website:undeploy:prod": "aws cloudformation delete-stack --stack-name agentic-website-demo-prod",


    "events": "aws cloudformation describe-stack-events --stack-name agentic-profile-mcp-dev --query 'StackEvents[0:5]' --output table",
    "events:prod": "aws cloudformation describe-stack-events --stack-name agentic-profile-mcp-prod --query 'StackEvents[0:5]' --output table",
    
    "test:local": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-event.json --template mcp-service.yaml",
    "test:tools-list": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-tools-list.json --template mcp-service.yaml",
    "test:get-profile": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-get-profile.json --template mcp-service.yaml",
    "test:venture": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-venture.json --template mcp-service.yaml",
    "test:venture-create": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-venture-create.json --template mcp-service.yaml",
    "test:vc": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-vc-initialize.json --template mcp-service.yaml",
    "test:vc-task-send": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-vc-task-send.json --template mcp-service.yaml",
    "test:hireme": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-hireme-task-send.json --template mcp-service.yaml",
    "test:hireme-taskhandler": "npm run build && sam local invoke AgenticProfileMCPFunction --event events/test-hireme-taskhandler.json --template mcp-service.yaml",
    "test:all": "npm run test:local && npm run test:tools-list && npm run test:get-profile && npm run test:venture && npm run test:venture-create && npm run test:vc && npm run test:vc-task-send && npm run test:hireme && npm run test:hireme-taskhandler",
    
   
    "test:redis": "node scripts/test-redis-connection.js",
    "test:local-redis": "npm run build && node scripts/test-local-redis.js"
  },
  "keywords": [
    "lambda",
    "typescript",
    "mcp"
  ],
  "author": "Mike Prince",
  "license": "Apache 2.0"
}
